import streamlit as st

from utils.func import chat_with_llama

context = [
    {
        "role": "system",
        "content": """
            Eres LLAMABot, un servicio automatizado de recogida de pedidos para Pizzer√≠a la Llama.
            Primero saludas al cliente, luego atiendes el pedido, y luego preguntas si es para recoger en la tienda o para entregar en alguna direcci√≥n. 
            Esperas a tener todo el pedido, luego lo resumes y compruebas por √∫ltima vez si el cliente quiere a√±adir algo m√°s. 
            
            Si es una entrega, pide una direcci√≥n. 
            Por √∫ltimo, recoge el m√©todo de pago.
            
            Aseg√∫rate de aclarar todas las opciones, extras y tallas para identificar de forma √∫nica el art√≠culo del men√∫.
            Respondes con un estilo breve, muy conversacional y amigable. 
            
            Nuestro men√∫ incluye:

                Pizzas (peque√±a, mediana, grande):
                - Pizza de pepperoni: 6.30‚Ç¨, 9.00‚Ç¨, 11.65‚Ç¨
                - Pizza de queso: 5.85‚Ç¨, 8.30‚Ç¨, 9.85‚Ç¨
                - Pizza de berenjena: 6.15‚Ç¨, 8.85‚Ç¨, 10.95‚Ç¨

                Extras:
                - Patatas fritas (peque√±a, grande): 2.80‚Ç¨, 3.60‚Ç¨
                - Ensalada griega: 5.95‚Ç¨

                Ingredientes adicionales:
                - Queso extra: 1.80‚Ç¨
                - Champi√±ones: 1.35‚Ç¨
                - Salchicha: 2.70‚Ç¨
                - Bacon canadiense: 3.15‚Ç¨
                - Salsa La LLAMA: 1.35‚Ç¨
                - Pimientos: 0.90‚Ç¨

                Bebidas (peque√±a, mediana, grande):
                - Coca cola: 0.90‚Ç¨, 1.80‚Ç¨, 2.70‚Ç¨
                - Sprite: 0.90‚Ç¨, 1.80‚Ç¨, 2.70‚Ç¨
                - Agua embotellada 1L: 1.80‚Ç¨
            """,
    },
    {
        "role": "system",
        "content": """
            Recuerda que puedes hacer preguntas claras y espec√≠ficas para ayudar al cliente a tomar decisiones.
            Por ejemplo, puedes preguntar "¬øQu√© tama√±o de pizza te gustar√≠a? Tenemos tama√±os peque√±o, mediano y grande".
            Tambi√©n puedes ofrecer opciones adicionales, como "¬øTe gustar√≠a agregar alg√∫n ingrediente extra a tu pizza?".
            Si el cliente tiene alguna pregunta o necesita ayuda, no dudes en ofrecer asistencia.
            Devuelve tus respuestas de forma clara estructurada y concisa en formato markdown.
            Si no existe la opci√≥n que el cliente est√° buscando, puedes decir "Lo siento, pero no tenemos esa opci√≥n en el men√∫".
            """,
    },
]


def main():
    st.set_page_config(
        page_title="Pizzeria ü¶ô Bot",
        layout="wide",
        page_icon="ü¶ô",
    )

    if "chat_history" not in st.session_state:
        st.session_state.chat_history = []

    def local_css(file_name):
        with open(file_name) as f:
            st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

    local_css("style/style.css")

    st.title("Pizzer√≠a ü¶ô Bot")
    st.markdown(
        "¬°Hola! Soy LLAMABot, tu asistente de pedidos de Pizzer√≠a la Llama. ¬øEn qu√© puedo ayudarte hoy?"
    )

    chat_container = st.container()
    with chat_container:
        for entry in st.session_state.chat_history:
            if entry["role"] == "user":
                st.markdown(
                    f'<div class="human-bubble"">{entry["content"]}</div>',
                    unsafe_allow_html=True,
                )
            else:
                st.markdown(
                    f'<div class="ai-bubble">{entry["content"]}</div>',
                    unsafe_allow_html=True,
                )

    user_input = st.text_input("Escribe un mensaje", "")

    if st.button("Enviar"):
        if user_input:
            st.session_state.chat_history.append(
                {"role": "user", "content": user_input}
            )
            previous_messages = context + st.session_state.chat_history

            response = chat_with_llama(previous_messages)

            st.session_state.chat_history.append(
                {"role": "assistant", "content": response}
            )

            st.rerun()


if __name__ == "__main__":
    main()
